//Bresenham's line drawing algorithm


#include <gl/glut.h>
#include <stdio.h>

int x1, y1, x2, y2;

void myInit() {
        glClear(GL_COLOR_BUFFER_BIT);
        glClearColor(0.0, 0.0, 0.0, 1.0);
        glMatrixMode(GL_PROJECTION);
        gluOrtho2D(0, 500, 0, 500);
}

void draw_pixel(int x, int y) {
        glBegin(GL_POINTS);
        glVertex2i(x, y);
        glEnd();
}

void draw_line(int x1, int x2, int y1, int y2) {
        int dx, dy, k, p0;
        int x=x1,y=y1;

        dx = abs(x2-x1);
        dy = abs(y2-y1);

        p0=2*dy-dx;

        draw_pixel(x,y);

        for(k=0;k<dx;k++){
                if(p0>0){
                        //next point is (x(k+1),y(k+1))
                        x=x+1;y=y+1;
                        //putting the pixel
                        draw_pixel(x,y);
                        //p(k+1)=p(k)-2*dx+2*dy
                        p0=p0-2*dx+2*dy;
                }
                else{
                        //next point is (x(k+1),y(k))
                        x=x+1;
                        //putting the pixel
                        draw_pixel(x,y);
                        //p(k+1)=p(k)+2*dy
                        p0=p0+2*dy;
                }
        }

}

void myDisplay() {
        draw_line(x1, x2, y1, y2);
        glFlush();
}

void main(int argc, char **argv) {

        printf( "Enter (x1, y1, x2, y2)\n");
        //taking the input
        scanf("%d %d %d %d", &x1, &y1, &x2, &y2);

        glutInit(&argc, argv);
        glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
        glutInitWindowSize(500, 500);
        glutInitWindowPosition(0, 0);
        glutCreateWindow("Bresenham's Line Drawing");
        myInit();
        glutDisplayFunc(myDisplay);
        glutMainLoop();
}